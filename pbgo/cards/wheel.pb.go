// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cards/wheel.proto

package cards

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// empty Wheel
type Wheel int32

const (
	Wheel_WEEL_0_UNSPECIFIED Wheel = 0
	Wheel_WEEL_1             Wheel = 1
	Wheel_WEEL_2             Wheel = 2
	Wheel_WEEL_3             Wheel = 3
	Wheel_WEEL_4             Wheel = 4
	Wheel_WEEL_5             Wheel = 5
	Wheel_WEEL_6             Wheel = 6
	Wheel_WEEL_7             Wheel = 7
	Wheel_WEEL_8             Wheel = 8
	Wheel_WEEL_9             Wheel = 9
	Wheel_WEEL_10            Wheel = 10
)

// Enum value maps for Wheel.
var (
	Wheel_name = map[int32]string{
		0:  "WEEL_0_UNSPECIFIED",
		1:  "WEEL_1",
		2:  "WEEL_2",
		3:  "WEEL_3",
		4:  "WEEL_4",
		5:  "WEEL_5",
		6:  "WEEL_6",
		7:  "WEEL_7",
		8:  "WEEL_8",
		9:  "WEEL_9",
		10: "WEEL_10",
	}
	Wheel_value = map[string]int32{
		"WEEL_0_UNSPECIFIED": 0,
		"WEEL_1":             1,
		"WEEL_2":             2,
		"WEEL_3":             3,
		"WEEL_4":             4,
		"WEEL_5":             5,
		"WEEL_6":             6,
		"WEEL_7":             7,
		"WEEL_8":             8,
		"WEEL_9":             9,
		"WEEL_10":            10,
	}
)

func (x Wheel) Enum() *Wheel {
	p := new(Wheel)
	*p = x
	return p
}

func (x Wheel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Wheel) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_wheel_proto_enumTypes[0].Descriptor()
}

func (Wheel) Type() protoreflect.EnumType {
	return &file_cards_wheel_proto_enumTypes[0]
}

func (x Wheel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Wheel.Descriptor instead.
func (Wheel) EnumDescriptor() ([]byte, []int) {
	return file_cards_wheel_proto_rawDescGZIP(), []int{0}
}

// 麻將幸運輪
type MahjongWheel int32

const (
	// 未指定
	MahjongWheel_MAHJONG_WEEL_CARD_UNSPECIFIED MahjongWheel = 0
	MahjongWheel_MAHJONG_WEEL_EAST             MahjongWheel = 1
	MahjongWheel_MAHJONG_WEEL_SOUTH            MahjongWheel = 2
	MahjongWheel_MAHJONG_WEEL_WEST             MahjongWheel = 3
	MahjongWheel_MAHJONG_WEEL_NORTH            MahjongWheel = 4
	MahjongWheel_MAHJONG_WEEL_WHITE_DRAGON     MahjongWheel = 5
	MahjongWheel_MAHJONG_WEEL_RED_DRAGON       MahjongWheel = 6
	MahjongWheel_MAHJONG_WEEL_GREEN_DRAGON     MahjongWheel = 7
)

// Enum value maps for MahjongWheel.
var (
	MahjongWheel_name = map[int32]string{
		0: "MAHJONG_WEEL_CARD_UNSPECIFIED",
		1: "MAHJONG_WEEL_EAST",
		2: "MAHJONG_WEEL_SOUTH",
		3: "MAHJONG_WEEL_WEST",
		4: "MAHJONG_WEEL_NORTH",
		5: "MAHJONG_WEEL_WHITE_DRAGON",
		6: "MAHJONG_WEEL_RED_DRAGON",
		7: "MAHJONG_WEEL_GREEN_DRAGON",
	}
	MahjongWheel_value = map[string]int32{
		"MAHJONG_WEEL_CARD_UNSPECIFIED": 0,
		"MAHJONG_WEEL_EAST":             1,
		"MAHJONG_WEEL_SOUTH":            2,
		"MAHJONG_WEEL_WEST":             3,
		"MAHJONG_WEEL_NORTH":            4,
		"MAHJONG_WEEL_WHITE_DRAGON":     5,
		"MAHJONG_WEEL_RED_DRAGON":       6,
		"MAHJONG_WEEL_GREEN_DRAGON":     7,
	}
)

func (x MahjongWheel) Enum() *MahjongWheel {
	p := new(MahjongWheel)
	*p = x
	return p
}

func (x MahjongWheel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MahjongWheel) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_wheel_proto_enumTypes[1].Descriptor()
}

func (MahjongWheel) Type() protoreflect.EnumType {
	return &file_cards_wheel_proto_enumTypes[1]
}

func (x MahjongWheel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MahjongWheel.Descriptor instead.
func (MahjongWheel) EnumDescriptor() ([]byte, []int) {
	return file_cards_wheel_proto_rawDescGZIP(), []int{1}
}

// 彩虹幸運輪
type RainbowWheel int32

const (
	// 未指定
	RainbowWheel_RAINBOW_WEEL_CARD_UNSPECIFIED RainbowWheel = 0
	RainbowWheel_RAINBOW_WEEL_RED              RainbowWheel = 1
	RainbowWheel_RAINBOW_WEEL_ORANGE           RainbowWheel = 2
	RainbowWheel_RAINBOW_WEEL_YELLOW           RainbowWheel = 3
	RainbowWheel_RAINBOW_WEEL_GREEN            RainbowWheel = 4
	RainbowWheel_RAINBOW_WEEL_BLUE             RainbowWheel = 5
	RainbowWheel_RAINBOW_WEEL_INDIGO           RainbowWheel = 6
	RainbowWheel_RAINBOW_WEEL_VIOLET           RainbowWheel = 7
)

// Enum value maps for RainbowWheel.
var (
	RainbowWheel_name = map[int32]string{
		0: "RAINBOW_WEEL_CARD_UNSPECIFIED",
		1: "RAINBOW_WEEL_RED",
		2: "RAINBOW_WEEL_ORANGE",
		3: "RAINBOW_WEEL_YELLOW",
		4: "RAINBOW_WEEL_GREEN",
		5: "RAINBOW_WEEL_BLUE",
		6: "RAINBOW_WEEL_INDIGO",
		7: "RAINBOW_WEEL_VIOLET",
	}
	RainbowWheel_value = map[string]int32{
		"RAINBOW_WEEL_CARD_UNSPECIFIED": 0,
		"RAINBOW_WEEL_RED":              1,
		"RAINBOW_WEEL_ORANGE":           2,
		"RAINBOW_WEEL_YELLOW":           3,
		"RAINBOW_WEEL_GREEN":            4,
		"RAINBOW_WEEL_BLUE":             5,
		"RAINBOW_WEEL_INDIGO":           6,
		"RAINBOW_WEEL_VIOLET":           7,
	}
)

func (x RainbowWheel) Enum() *RainbowWheel {
	p := new(RainbowWheel)
	*p = x
	return p
}

func (x RainbowWheel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RainbowWheel) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_wheel_proto_enumTypes[2].Descriptor()
}

func (RainbowWheel) Type() protoreflect.EnumType {
	return &file_cards_wheel_proto_enumTypes[2]
}

func (x RainbowWheel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RainbowWheel.Descriptor instead.
func (RainbowWheel) EnumDescriptor() ([]byte, []int) {
	return file_cards_wheel_proto_rawDescGZIP(), []int{2}
}

var File_cards_wheel_proto protoreflect.FileDescriptor

var file_cards_wheel_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2a, 0x98, 0x01, 0x0a, 0x05, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x30, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x57, 0x45, 0x45, 0x4c, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c,
	0x5f, 0x32, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x33, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x57, 0x45, 0x45, 0x4c, 0x5f, 0x35, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c,
	0x5f, 0x36, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x37, 0x10, 0x07,
	0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x38, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06,
	0x57, 0x45, 0x45, 0x4c, 0x5f, 0x39, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x45, 0x4c,
	0x5f, 0x31, 0x30, 0x10, 0x0a, 0x2a, 0xea, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x41, 0x48, 0x4a, 0x4f, 0x4e,
	0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41, 0x48,
	0x4a, 0x4f, 0x4e, 0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x48, 0x4a, 0x4f, 0x4e, 0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c,
	0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x41, 0x48, 0x4a,
	0x4f, 0x4e, 0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x4d, 0x41, 0x48, 0x4a, 0x4f, 0x4e, 0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f,
	0x4e, 0x4f, 0x52, 0x54, 0x48, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x41, 0x48, 0x4a, 0x4f,
	0x4e, 0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x5f, 0x44, 0x52,
	0x41, 0x47, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x48, 0x4a, 0x4f, 0x4e,
	0x47, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x52, 0x41, 0x47, 0x4f,
	0x4e, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x41, 0x48, 0x4a, 0x4f, 0x4e, 0x47, 0x5f, 0x57,
	0x45, 0x45, 0x4c, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e,
	0x10, 0x07, 0x2a, 0xda, 0x01, 0x0a, 0x0c, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x57,
	0x45, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f,
	0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x4f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57,
	0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f,
	0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x05, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x49, 0x4e,
	0x44, 0x49, 0x47, 0x4f, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x49, 0x4e, 0x42, 0x4f,
	0x57, 0x5f, 0x57, 0x45, 0x45, 0x4c, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x45, 0x54, 0x10, 0x07, 0x42,
	0x7f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x42, 0x0a, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x6b, 0x79, 0x63, 0x61, 0x73, 0x69, 0x6e, 0x6f, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x73, 0xa2, 0x02,
	0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0xca, 0x02, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0xe2, 0x02, 0x11, 0x43, 0x61, 0x72, 0x64, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cards_wheel_proto_rawDescOnce sync.Once
	file_cards_wheel_proto_rawDescData = file_cards_wheel_proto_rawDesc
)

func file_cards_wheel_proto_rawDescGZIP() []byte {
	file_cards_wheel_proto_rawDescOnce.Do(func() {
		file_cards_wheel_proto_rawDescData = protoimpl.X.CompressGZIP(file_cards_wheel_proto_rawDescData)
	})
	return file_cards_wheel_proto_rawDescData
}

var file_cards_wheel_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cards_wheel_proto_goTypes = []interface{}{
	(Wheel)(0),        // 0: cards.Wheel
	(MahjongWheel)(0), // 1: cards.MahjongWheel
	(RainbowWheel)(0), // 2: cards.RainbowWheel
}
var file_cards_wheel_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cards_wheel_proto_init() }
func file_cards_wheel_proto_init() {
	if File_cards_wheel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cards_wheel_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cards_wheel_proto_goTypes,
		DependencyIndexes: file_cards_wheel_proto_depIdxs,
		EnumInfos:         file_cards_wheel_proto_enumTypes,
	}.Build()
	File_cards_wheel_proto = out.File
	file_cards_wheel_proto_rawDesc = nil
	file_cards_wheel_proto_goTypes = nil
	file_cards_wheel_proto_depIdxs = nil
}
