// @generated by protoc-gen-es v1.3.1 with parameter "target=ts,import_extension=none"
// @generated from file games/bullfight/record.proto (package games.bullfight, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * @generated from enum games.bullfight.ResourceType
 */
export var ResourceType;
(function (ResourceType) {
    /**
     * 未指定
     *
     * @generated from enum value: RESOURCE_TYPE_UNSPECIFIED = 0;
     */
    ResourceType[ResourceType["RESOURCE_TYPE_UNSPECIFIED"] = 0] = "RESOURCE_TYPE_UNSPECIFIED";
    /**
     * 牌靴
     *
     * @generated from enum value: SHOE = 1;
     */
    ResourceType[ResourceType["SHOE"] = 1] = "SHOE";
    /**
     * 例牌
     *
     * @generated from enum value: NORMAL = 2;
     */
    ResourceType[ResourceType["NORMAL"] = 2] = "NORMAL";
})(ResourceType || (ResourceType = {}));
// Retrieve enum metadata with: proto3.getEnumType(ResourceType)
proto3.util.setEnumType(ResourceType, "games.bullfight.ResourceType", [
    { no: 0, name: "RESOURCE_TYPE_UNSPECIFIED" },
    { no: 1, name: "SHOE" },
    { no: 2, name: "NORMAL" },
]);
/**
 * 步驟，依據遊戲供應商邏輯，不是每個步驟都會走到
 *
 * @generated from enum games.bullfight.Step
 */
export var Step;
(function (Step) {
    /**
     * 未指定
     *
     * @generated from enum value: STEP_UNSPECIFIED = 0;
     */
    Step[Step["STEP_UNSPECIFIED"] = 0] = "STEP_UNSPECIFIED";
    /**
     * 本局開始
     *
     * @generated from enum value: ROUND_START = 1;
     */
    Step[Step["ROUND_START"] = 1] = "ROUND_START";
    /**
     * 本局完成
     *
     * @generated from enum value: ROUND_FINISHED = 2;
     */
    Step[Step["ROUND_FINISHED"] = 2] = "ROUND_FINISHED";
    /**
     * 本局取消
     *
     * @generated from enum value: ROUND_CANCELED = 3;
     */
    Step[Step["ROUND_CANCELED"] = 3] = "ROUND_CANCELED";
    /**
     * 派發起始位子牌(決定順位)
     *
     * @generated from enum value: DEAL_FIRSTCARD = 4;
     */
    Step[Step["DEAL_FIRSTCARD"] = 4] = "DEAL_FIRSTCARD";
    /**
     * 派發莊家例牌
     *
     * @generated from enum value: DEAL_BANKER_1 = 5;
     */
    Step[Step["DEAL_BANKER_1"] = 5] = "DEAL_BANKER_1";
    /**
     * 派發玩家1例牌
     *
     * @generated from enum value: DEAL_PLAYER_1 = 6;
     */
    Step[Step["DEAL_PLAYER_1"] = 6] = "DEAL_PLAYER_1";
    /**
     * 派發玩家2例牌
     *
     * @generated from enum value: DEAL_PLAYER_2 = 7;
     */
    Step[Step["DEAL_PLAYER_2"] = 7] = "DEAL_PLAYER_2";
    /**
     * 派發玩家3例牌
     *
     * @generated from enum value: DEAL_PLAYER_3 = 8;
     */
    Step[Step["DEAL_PLAYER_3"] = 8] = "DEAL_PLAYER_3";
    /**
     * 開放下注
     *
     * @generated from enum value: OPEN_FOR_BETTING = 9;
     */
    Step[Step["OPEN_FOR_BETTING"] = 9] = "OPEN_FOR_BETTING";
    /**
     * 停止下注
     *
     * @generated from enum value: CLOSE_THE_BETTING = 10;
     */
    Step[Step["CLOSE_THE_BETTING"] = 10] = "CLOSE_THE_BETTING";
    /**
     * 開莊家1例牌
     *
     * @generated from enum value: SHOW_BANKER_1 = 12;
     */
    Step[Step["SHOW_BANKER_1"] = 12] = "SHOW_BANKER_1";
    /**
     * 開玩家1例牌
     *
     * @generated from enum value: SHOW_PLAYER_1 = 13;
     */
    Step[Step["SHOW_PLAYER_1"] = 13] = "SHOW_PLAYER_1";
    /**
     * 開玩家2例牌
     *
     * @generated from enum value: SHOW_PLAYER_2 = 14;
     */
    Step[Step["SHOW_PLAYER_2"] = 14] = "SHOW_PLAYER_2";
    /**
     * 開玩家3例牌
     *
     * @generated from enum value: SHOW_PLAYER_3 = 15;
     */
    Step[Step["SHOW_PLAYER_3"] = 15] = "SHOW_PLAYER_3";
    /**
     * PITBOSS 修改派發例牌
     *
     * @generated from enum value: PITBOSS_MODIFY_BANKER_1 = 24;
     */
    Step[Step["PITBOSS_MODIFY_BANKER_1"] = 24] = "PITBOSS_MODIFY_BANKER_1";
    /**
     * @generated from enum value: PITBOSS_MODIFY_PLAYER_1 = 25;
     */
    Step[Step["PITBOSS_MODIFY_PLAYER_1"] = 25] = "PITBOSS_MODIFY_PLAYER_1";
    /**
     * @generated from enum value: PITBOSS_MODIFY_PLAYER_2 = 26;
     */
    Step[Step["PITBOSS_MODIFY_PLAYER_2"] = 26] = "PITBOSS_MODIFY_PLAYER_2";
    /**
     * @generated from enum value: PITBOSS_MODIFY_PLAYER_3 = 27;
     */
    Step[Step["PITBOSS_MODIFY_PLAYER_3"] = 27] = "PITBOSS_MODIFY_PLAYER_3";
})(Step || (Step = {}));
// Retrieve enum metadata with: proto3.getEnumType(Step)
proto3.util.setEnumType(Step, "games.bullfight.Step", [
    { no: 0, name: "STEP_UNSPECIFIED" },
    { no: 1, name: "ROUND_START" },
    { no: 2, name: "ROUND_FINISHED" },
    { no: 3, name: "ROUND_CANCELED" },
    { no: 4, name: "DEAL_FIRSTCARD" },
    { no: 5, name: "DEAL_BANKER_1" },
    { no: 6, name: "DEAL_PLAYER_1" },
    { no: 7, name: "DEAL_PLAYER_2" },
    { no: 8, name: "DEAL_PLAYER_3" },
    { no: 9, name: "OPEN_FOR_BETTING" },
    { no: 10, name: "CLOSE_THE_BETTING" },
    { no: 12, name: "SHOW_BANKER_1" },
    { no: 13, name: "SHOW_PLAYER_1" },
    { no: 14, name: "SHOW_PLAYER_2" },
    { no: 15, name: "SHOW_PLAYER_3" },
    { no: 24, name: "PITBOSS_MODIFY_BANKER_1" },
    { no: 25, name: "PITBOSS_MODIFY_PLAYER_1" },
    { no: 26, name: "PITBOSS_MODIFY_PLAYER_2" },
    { no: 27, name: "PITBOSS_MODIFY_PLAYER_3" },
]);
/**
 * 座位功能代碼
 *
 * @generated from enum games.bullfight.Seat
 */
export var Seat;
(function (Seat) {
    /**
     * 未指定
     *
     * @generated from enum value: SEAT_UNSPECIFIED = 0;
     */
    Seat[Seat["SEAT_UNSPECIFIED"] = 0] = "SEAT_UNSPECIFIED";
    /**
     * 起始牌
     *
     * @generated from enum value: FISRTCARD = 1;
     */
    Seat[Seat["FISRTCARD"] = 1] = "FISRTCARD";
    /**
     * 莊家
     *
     * @generated from enum value: BANKER = 2;
     */
    Seat[Seat["BANKER"] = 2] = "BANKER";
    /**
     * 玩家1
     *
     * @generated from enum value: PLAYER1 = 3;
     */
    Seat[Seat["PLAYER1"] = 3] = "PLAYER1";
    /**
     * 玩家2
     *
     * @generated from enum value: PLAYER2 = 4;
     */
    Seat[Seat["PLAYER2"] = 4] = "PLAYER2";
    /**
     * 玩家3
     *
     * @generated from enum value: PLAYER3 = 5;
     */
    Seat[Seat["PLAYER3"] = 5] = "PLAYER3";
    /**
     * Dealer
     *
     * @generated from enum value: DEALER = 6;
     */
    Seat[Seat["DEALER"] = 6] = "DEALER";
    /**
     * Pitboss
     *
     * @generated from enum value: PITBOSS = 9;
     */
    Seat[Seat["PITBOSS"] = 9] = "PITBOSS";
})(Seat || (Seat = {}));
// Retrieve enum metadata with: proto3.getEnumType(Seat)
proto3.util.setEnumType(Seat, "games.bullfight.Seat", [
    { no: 0, name: "SEAT_UNSPECIFIED" },
    { no: 1, name: "FISRTCARD" },
    { no: 2, name: "BANKER" },
    { no: 3, name: "PLAYER1" },
    { no: 4, name: "PLAYER2" },
    { no: 5, name: "PLAYER3" },
    { no: 6, name: "DEALER" },
    { no: 9, name: "PITBOSS" },
]);
/**
 * 結果紀錄類型代碼
 *
 * @generated from enum games.bullfight.ResultRecordType
 */
export var ResultRecordType;
(function (ResultRecordType) {
    /**
     * 未指定
     *
     * @generated from enum value: RESULT_RECORD_TYPE_UNSPECIFIED = 0;
     */
    ResultRecordType[ResultRecordType["RESULT_RECORD_TYPE_UNSPECIFIED"] = 0] = "RESULT_RECORD_TYPE_UNSPECIFIED";
    /**
     * 遊戲局結束
     *
     * @generated from enum value: ROUND_FINISH = 1;
     */
    ResultRecordType[ResultRecordType["ROUND_FINISH"] = 1] = "ROUND_FINISH";
    /**
     * Pitboss 修正
     *
     * @generated from enum value: PITBOSS_MODIFY_RESULT = 2;
     */
    ResultRecordType[ResultRecordType["PITBOSS_MODIFY_RESULT"] = 2] = "PITBOSS_MODIFY_RESULT";
})(ResultRecordType || (ResultRecordType = {}));
// Retrieve enum metadata with: proto3.getEnumType(ResultRecordType)
proto3.util.setEnumType(ResultRecordType, "games.bullfight.ResultRecordType", [
    { no: 0, name: "RESULT_RECORD_TYPE_UNSPECIFIED" },
    { no: 1, name: "ROUND_FINISH" },
    { no: 2, name: "PITBOSS_MODIFY_RESULT" },
]);
/**
 * 取消原因
 *
 * @generated from enum games.bullfight.CancelReason
 */
export var CancelReason;
(function (CancelReason) {
    /**
     * 未指定，沒有取消
     *
     * @generated from enum value: CANCEL_REASON_UNSPECIFIED = 0;
     */
    CancelReason[CancelReason["CANCEL_REASON_UNSPECIFIED"] = 0] = "CANCEL_REASON_UNSPECIFIED";
    /**
     * 取消說明原因
     *
     * @generated from enum value: NO_REASON = 1;
     */
    CancelReason[CancelReason["NO_REASON"] = 1] = "NO_REASON";
})(CancelReason || (CancelReason = {}));
// Retrieve enum metadata with: proto3.getEnumType(CancelReason)
proto3.util.setEnumType(CancelReason, "games.bullfight.CancelReason", [
    { no: 0, name: "CANCEL_REASON_UNSPECIFIED" },
    { no: 1, name: "NO_REASON" },
]);
/**
 * *
 * The state of the game flow
 *
 * @generated from enum games.bullfight.GameState
 */
export var GameState;
(function (GameState) {
    /**
     * idle
     *
     * @generated from enum value: STATE_IDLE = 0;
     */
    GameState[GameState["STATE_IDLE"] = 0] = "STATE_IDLE";
    /**
     * game starting
     *
     * @generated from enum value: STATE_START = 1;
     */
    GameState[GameState["STATE_START"] = 1] = "STATE_START";
    /**
     * counter started
     *
     * @generated from enum value: STATE_COUNTER_START = 2;
     */
    GameState[GameState["STATE_COUNTER_START"] = 2] = "STATE_COUNTER_START";
    /**
     * scanned the first card ; wait for counter end
     *
     * @generated from enum value: STATE_COUNTER_END = 3;
     */
    GameState[GameState["STATE_COUNTER_END"] = 3] = "STATE_COUNTER_END";
    /**
     * counter ended ; wait for the first position scan
     *
     * @generated from enum value: STATE_REVEAL_FIRST = 4;
     */
    GameState[GameState["STATE_REVEAL_FIRST"] = 4] = "STATE_REVEAL_FIRST";
    /**
     * scanned the first position ; wait for the second position scan
     *
     * @generated from enum value: STATE_REVEAL_SECOND = 5;
     */
    GameState[GameState["STATE_REVEAL_SECOND"] = 5] = "STATE_REVEAL_SECOND";
    /**
     * scanned the second position ; wait for the third position scan
     *
     * @generated from enum value: STATE_REVEAL_THIRD = 6;
     */
    GameState[GameState["STATE_REVEAL_THIRD"] = 6] = "STATE_REVEAL_THIRD";
    /**
     * scanned the third position ; wait for the fourth position scan
     *
     * @generated from enum value: STATE_REVEAL_FOURTH = 7;
     */
    GameState[GameState["STATE_REVEAL_FOURTH"] = 7] = "STATE_REVEAL_FOURTH";
    /**
     * scanned the fourth position ; wait for confirm
     *
     * @generated from enum value: STATE_CONFIRM = 8;
     */
    GameState[GameState["STATE_CONFIRM"] = 8] = "STATE_CONFIRM";
    /**
     * game ended
     *
     * @generated from enum value: STATE_END = 9;
     */
    GameState[GameState["STATE_END"] = 9] = "STATE_END";
    /**
     * shuffle cards
     *
     * @generated from enum value: STATE_SHUFFLE = 30;
     */
    GameState[GameState["STATE_SHUFFLE"] = 30] = "STATE_SHUFFLE";
})(GameState || (GameState = {}));
// Retrieve enum metadata with: proto3.getEnumType(GameState)
proto3.util.setEnumType(GameState, "games.bullfight.GameState", [
    { no: 0, name: "STATE_IDLE" },
    { no: 1, name: "STATE_START" },
    { no: 2, name: "STATE_COUNTER_START" },
    { no: 3, name: "STATE_COUNTER_END" },
    { no: 4, name: "STATE_REVEAL_FIRST" },
    { no: 5, name: "STATE_REVEAL_SECOND" },
    { no: 6, name: "STATE_REVEAL_THIRD" },
    { no: 7, name: "STATE_REVEAL_FOURTH" },
    { no: 8, name: "STATE_CONFIRM" },
    { no: 9, name: "STATE_END" },
    { no: 30, name: "STATE_SHUFFLE" },
]);
/**
 * @generated from enum games.bullfight.WinType
 */
export var WinType;
(function (WinType) {
    /**
     * @generated from enum value: NULL = 0;
     */
    WinType[WinType["NULL"] = 0] = "NULL";
    /**
     * @generated from enum value: WINPLAYER = 1;
     */
    WinType[WinType["WINPLAYER"] = 1] = "WINPLAYER";
    /**
     * @generated from enum value: WINBANKER = 2;
     */
    WinType[WinType["WINBANKER"] = 2] = "WINBANKER";
})(WinType || (WinType = {}));
// Retrieve enum metadata with: proto3.getEnumType(WinType)
proto3.util.setEnumType(WinType, "games.bullfight.WinType", [
    { no: 0, name: "NULL" },
    { no: 1, name: "WINPLAYER" },
    { no: 2, name: "WINBANKER" },
]);
/**
 * @generated from enum games.bullfight.PatternType
 */
export var PatternType;
(function (PatternType) {
    /**
     * 無牛
     *
     * @generated from enum value: NO_COW = 0;
     */
    PatternType[PatternType["NO_COW"] = 0] = "NO_COW";
    /**
     * 牛1
     *
     * @generated from enum value: COW_ONE = 11;
     */
    PatternType[PatternType["COW_ONE"] = 11] = "COW_ONE";
    /**
     * 牛2
     *
     * @generated from enum value: COW_TWO = 12;
     */
    PatternType[PatternType["COW_TWO"] = 12] = "COW_TWO";
    /**
     * 牛3
     *
     * @generated from enum value: COW_THREE = 13;
     */
    PatternType[PatternType["COW_THREE"] = 13] = "COW_THREE";
    /**
     * 牛4
     *
     * @generated from enum value: COW_FOUR = 14;
     */
    PatternType[PatternType["COW_FOUR"] = 14] = "COW_FOUR";
    /**
     * 牛5
     *
     * @generated from enum value: COW_FIVE = 15;
     */
    PatternType[PatternType["COW_FIVE"] = 15] = "COW_FIVE";
    /**
     * 牛6
     *
     * @generated from enum value: COW_SIX = 16;
     */
    PatternType[PatternType["COW_SIX"] = 16] = "COW_SIX";
    /**
     * 牛7
     *
     * @generated from enum value: COW_SEVEN = 17;
     */
    PatternType[PatternType["COW_SEVEN"] = 17] = "COW_SEVEN";
    /**
     * 牛8
     *
     * @generated from enum value: COW_EIGHT = 18;
     */
    PatternType[PatternType["COW_EIGHT"] = 18] = "COW_EIGHT";
    /**
     * 牛9
     *
     * @generated from enum value: COW_NINE = 19;
     */
    PatternType[PatternType["COW_NINE"] = 19] = "COW_NINE";
    /**
     * 牛牛
     *
     * @generated from enum value: COW_COW = 20;
     */
    PatternType[PatternType["COW_COW"] = 20] = "COW_COW";
    /**
     * 五公
     *
     * @generated from enum value: FIVE_FLOWER = 30;
     */
    PatternType[PatternType["FIVE_FLOWER"] = 30] = "FIVE_FLOWER";
    /**
     * @generated from enum value: TYPE_NULL = -1;
     */
    PatternType[PatternType["TYPE_NULL"] = -1] = "TYPE_NULL";
})(PatternType || (PatternType = {}));
// Retrieve enum metadata with: proto3.getEnumType(PatternType)
proto3.util.setEnumType(PatternType, "games.bullfight.PatternType", [
    { no: 0, name: "NO_COW" },
    { no: 11, name: "COW_ONE" },
    { no: 12, name: "COW_TWO" },
    { no: 13, name: "COW_THREE" },
    { no: 14, name: "COW_FOUR" },
    { no: 15, name: "COW_FIVE" },
    { no: 16, name: "COW_SIX" },
    { no: 17, name: "COW_SEVEN" },
    { no: 18, name: "COW_EIGHT" },
    { no: 19, name: "COW_NINE" },
    { no: 20, name: "COW_COW" },
    { no: 30, name: "FIVE_FLOWER" },
    { no: -1, name: "TYPE_NULL" },
]);
/**
 * *
 * The status fo the current game.
 *
 * @generated from message games.bullfight.GameStatus
 */
export class GameStatus extends Message {
    /**
     * Unique tableid
     *
     * @generated from field: string sessionID = 1;
     */
    sessionID = "";
    /**
     * Unique session for the game
     *
     * @generated from field: string gameRoundID = 2;
     */
    gameRoundID = "";
    /**
     * Unique tableid
     *
     * @generated from field: string tableID = 3;
     */
    tableID = "";
    /**
     * State of the game
     *
     * @generated from field: games.bullfight.GameState state = 4;
     */
    state = GameState.STATE_IDLE;
    /**
     * Time when game start
     *
     * @generated from field: int64 startTime = 5;
     */
    startTime = protoInt64.zero;
    /**
     * Shoe ID
     *
     * @generated from field: string shoeID = 6;
     */
    shoeID = "";
    /**
     * @generated from field: int32 shoe = 7;
     */
    shoe = 0;
    /**
     * @generated from field: int32 round = 8;
     */
    round = 0;
    /**
     * game specify information
     *
     * Coundown value
     *
     * @generated from field: int32 countdown = 40;
     */
    countdown = 0;
    /**
     * First card
     *
     * @generated from field: string firstCard = 10;
     */
    firstCard = "";
    /**
     * Next position to be revealed: b1 / b2 /... / z5
     *
     * @generated from field: string revealingPosition = 39;
     */
    revealingPosition = "";
    /**
     * Card slot Banker 1
     *
     * @generated from field: string b1 = 11;
     */
    b1 = "";
    /**
     * Card slot Banker 2
     *
     * @generated from field: string b2 = 12;
     */
    b2 = "";
    /**
     * Card slot Banker 3
     *
     * @generated from field: string b3 = 13;
     */
    b3 = "";
    /**
     * Card slot Banker 4
     *
     * @generated from field: string b4 = 14;
     */
    b4 = "";
    /**
     * Card slot Banker 5
     *
     * @generated from field: string b5 = 15;
     */
    b5 = "";
    /**
     * Card slot PlayerX 1
     *
     * @generated from field: string x1 = 16;
     */
    x1 = "";
    /**
     * Card slot PlayerX 2
     *
     * @generated from field: string x2 = 17;
     */
    x2 = "";
    /**
     * Card slot PlayerX 3
     *
     * @generated from field: string x3 = 18;
     */
    x3 = "";
    /**
     * Card slot PlayerX 4
     *
     * @generated from field: string x4 = 19;
     */
    x4 = "";
    /**
     * Card slot PlayerX 5
     *
     * @generated from field: string x5 = 20;
     */
    x5 = "";
    /**
     * Card slot PlayerY 1
     *
     * @generated from field: string y1 = 21;
     */
    y1 = "";
    /**
     * Card slot PlayerY 2
     *
     * @generated from field: string y2 = 22;
     */
    y2 = "";
    /**
     * Card slot PlayerY 3
     *
     * @generated from field: string y3 = 23;
     */
    y3 = "";
    /**
     * Card slot PlayerY 4
     *
     * @generated from field: string y4 = 24;
     */
    y4 = "";
    /**
     * Card slot PlayerY 5
     *
     * @generated from field: string y5 = 25;
     */
    y5 = "";
    /**
     * Card slot PlayerZ 1
     *
     * @generated from field: string z1 = 26;
     */
    z1 = "";
    /**
     * Card slot PlayerZ 2
     *
     * @generated from field: string z2 = 27;
     */
    z2 = "";
    /**
     * Card slot PlayerZ 3
     *
     * @generated from field: string z3 = 28;
     */
    z3 = "";
    /**
     * Card slot PlayerZ 4
     *
     * @generated from field: string z4 = 29;
     */
    z4 = "";
    /**
     * Card slot PlayerZ 5
     *
     * @generated from field: string z5 = 30;
     */
    z5 = "";
    /**
     * Banker pattern type
     *
     * @generated from field: games.bullfight.PatternType bankerType = 31;
     */
    bankerType = PatternType.NO_COW;
    /**
     * PlayerX pattern type
     *
     * @generated from field: games.bullfight.PatternType playerXType = 32;
     */
    playerXType = PatternType.NO_COW;
    /**
     * PlayerY pattern type
     *
     * @generated from field: games.bullfight.PatternType playerYType = 33;
     */
    playerYType = PatternType.NO_COW;
    /**
     * PlayerZ pattern type
     *
     * @generated from field: games.bullfight.PatternType playerZType = 34;
     */
    playerZType = PatternType.NO_COW;
    /**
     * 0  - none, 1 - player X win, 2 - banker win
     *
     * @generated from field: games.bullfight.WinType playerXWin = 35;
     */
    playerXWin = WinType.NULL;
    /**
     * 0  - none, 1 - player Y win, 2 - banker win
     *
     * @generated from field: games.bullfight.WinType playerYWin = 36;
     */
    playerYWin = WinType.NULL;
    /**
     * 0  - none, 1 - player Z win, 2 - banker win
     *
     * @generated from field: games.bullfight.WinType playerZWin = 37;
     */
    playerZWin = WinType.NULL;
    /**
     * If redcard scan
     *
     * @generated from field: bool redcard = 90;
     */
    redcard = false;
    /**
     * masked cards sn slice for blockchan
     *
     * @generated from field: repeated string maskedCardsSN = 103;
     */
    maskedCardsSN = [];
    /**
     * sha256 cards from masked cards sn
     *
     * @generated from field: repeated string hashedCards = 104;
     */
    hashedCards = [];
    /**
     * bool showFirstCard = 105;           // show first card boolean when new shoe
     * string firstCard = 106;             // first card of the shoe
     * int32 currentCardIndex = 107;       // next card to show (i.e. first maskedCardsSN haven't been shown's index)
     * int32 redCardIndex = 108;           // the red card index of the shoe
     *
     * cosmos blockchain id for the shoe
     *
     * @generated from field: string cosmosShoeID = 109;
     */
    cosmosShoeID = "";
    /**
     * length of hashedCards
     *
     * @generated from field: int32 hashedLength = 110;
     */
    hashedLength = 0;
    /**
     * Lucky Number and payout ratio
     *
     * @generated from field: map<string, int32> lucky = 150;
     */
    lucky = {};
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static runtime = proto3;
    static typeName = "games.bullfight.GameStatus";
    static fields = proto3.util.newFieldList(() => [
        { no: 1, name: "sessionID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "gameRoundID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "tableID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(GameState) },
        { no: 5, name: "startTime", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 6, name: "shoeID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "shoe", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 8, name: "round", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 40, name: "countdown", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 10, name: "firstCard", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 39, name: "revealingPosition", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "b1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "b2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 13, name: "b3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 14, name: "b4", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 15, name: "b5", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 16, name: "x1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 17, name: "x2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 18, name: "x3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 19, name: "x4", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 20, name: "x5", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "y1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 22, name: "y2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 23, name: "y3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 24, name: "y4", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 25, name: "y5", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 26, name: "z1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 27, name: "z2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 28, name: "z3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 29, name: "z4", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 30, name: "z5", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 31, name: "bankerType", kind: "enum", T: proto3.getEnumType(PatternType) },
        { no: 32, name: "playerXType", kind: "enum", T: proto3.getEnumType(PatternType) },
        { no: 33, name: "playerYType", kind: "enum", T: proto3.getEnumType(PatternType) },
        { no: 34, name: "playerZType", kind: "enum", T: proto3.getEnumType(PatternType) },
        { no: 35, name: "playerXWin", kind: "enum", T: proto3.getEnumType(WinType) },
        { no: 36, name: "playerYWin", kind: "enum", T: proto3.getEnumType(WinType) },
        { no: 37, name: "playerZWin", kind: "enum", T: proto3.getEnumType(WinType) },
        { no: 90, name: "redcard", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 103, name: "maskedCardsSN", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 104, name: "hashedCards", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
        { no: 109, name: "cosmosShoeID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 110, name: "hashedLength", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
        { no: 150, name: "lucky", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 5 /* ScalarType.INT32 */ } },
    ]);
    static fromBinary(bytes, options) {
        return new GameStatus().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GameStatus().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GameStatus().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GameStatus, a, b);
    }
}
