// @generated by protoc-gen-connect-es v0.9.1
// @generated from file recorder/provider.proto (package recorder, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FetchCurrentGameRequest, FetchCurrentGameResponse, FetchGameProvideListResponse, FetchRoundRecordRequest, FetchRoundRecordResponse, FetchShiftRecordRequest, FetchShiftRecordResponse, FetchShuffleRecordRequest, FetchShuffleRecordResponse } from "./provider_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service recorder.RecorderReadService
 */
export const RecorderReadService = {
  typeName: "recorder.RecorderReadService",
  methods: {
    /**
     * 讀取班次紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchShiftRecord
     */
    fetchShiftRecord: {
      name: "FetchShiftRecord",
      I: FetchShiftRecordRequest,
      O: FetchShiftRecordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 讀洗牌紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchShuffleRecord
     */
    fetchShuffleRecord: {
      name: "FetchShuffleRecord",
      I: FetchShuffleRecordRequest,
      O: FetchShuffleRecordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 讀遊戲局號紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchRoundRecord
     */
    fetchRoundRecord: {
      name: "FetchRoundRecord",
      I: FetchRoundRecordRequest,
      O: FetchRoundRecordResponse,
      kind: MethodKind.Unary,
    },
  }
};

/**
 * 遊戲供應商需要開放出來的被動接口
 *
 * @generated from service recorder.ProviderService
 */
export const ProviderService = {
  typeName: "recorder.ProviderService",
  methods: {
    /**
     * 取得即時遊戲列表
     *
     * @generated from rpc recorder.ProviderService.FetchGameProvideList
     */
    fetchGameProvideList: {
      name: "FetchGameProvideList",
      I: Empty,
      O: FetchGameProvideListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 讀即時遊戲桌資訊
     *
     * @generated from rpc recorder.ProviderService.FetchCurrentGame
     */
    fetchCurrentGame: {
      name: "FetchCurrentGame",
      I: FetchCurrentGameRequest,
      O: FetchCurrentGameResponse,
      kind: MethodKind.Unary,
    },
  }
};

