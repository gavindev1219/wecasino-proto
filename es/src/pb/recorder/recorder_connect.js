// @generated by protoc-gen-connect-es v0.9.1
// @generated from file recorder/recorder.proto (package recorder, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FetchRoundRecordRequest, FetchRoundRecordResponse, FetchShuffleRecordRequest, FetchShuffleRecordResponse, RecordIDResponse, RecordRoundCancelRequest, RecordRoundFinishRequest, RecordRoundResultsRequest, RecordRoundStartRequest, RecordRoundStepsRequest, RecordShuffleDoneRequest, RecordShuffleStartedRequest } from "./recorder_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service recorder.RecorderService
 */
export const RecorderService = {
  typeName: "recorder.RecorderService",
  methods: {
    /**
     * 開始更換牌組
     *
     * @generated from rpc recorder.RecorderService.RecordShuffleStarted
     */
    recordShuffleStarted: {
      name: "RecordShuffleStarted",
      I: RecordShuffleStartedRequest,
      O: RecordIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 更換牌組完畢
     *
     * @generated from rpc recorder.RecorderService.RecordShuffleDone
     */
    recordShuffleDone: {
      name: "RecordShuffleDone",
      I: RecordShuffleDoneRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * 開啟新局
     *
     * @generated from rpc recorder.RecorderService.RecordRoundStart
     */
    recordRoundStart: {
      name: "RecordRoundStart",
      I: RecordRoundStartRequest,
      O: RecordIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 記錄步驟
     *
     * @generated from rpc recorder.RecorderService.RecordRoundSteps
     */
    recordRoundSteps: {
      name: "RecordRoundSteps",
      I: RecordRoundStepsRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * 紀錄結果
     *
     * @generated from rpc recorder.RecorderService.RecordRoundResults
     */
    recordRoundResults: {
      name: "RecordRoundResults",
      I: RecordRoundResultsRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * 此局作廢
     *
     * @generated from rpc recorder.RecorderService.RecordRoundCancel
     */
    recordRoundCancel: {
      name: "RecordRoundCancel",
      I: RecordRoundCancelRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * 結束此局
     *
     * @generated from rpc recorder.RecorderService.RecordRoundFinish
     */
    recordRoundFinish: {
      name: "RecordRoundFinish",
      I: RecordRoundFinishRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
};

/**
 * @generated from service recorder.RecorderReadService
 */
export const RecorderReadService = {
  typeName: "recorder.RecorderReadService",
  methods: {
    /**
     * 讀洗牌紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchShuffleRecord
     */
    fetchShuffleRecord: {
      name: "FetchShuffleRecord",
      I: FetchShuffleRecordRequest,
      O: FetchShuffleRecordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 讀遊戲局號紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchRoundRecord
     */
    fetchRoundRecord: {
      name: "FetchRoundRecord",
      I: FetchRoundRecordRequest,
      O: FetchRoundRecordResponse,
      kind: MethodKind.Unary,
    },
  }
};

