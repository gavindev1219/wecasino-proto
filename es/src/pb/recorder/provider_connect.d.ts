// @generated by protoc-gen-connect-es v0.9.1
// @generated from file recorder/provider.proto (package recorder, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FetchCurrentTableRequest, FetchCurrentTableResponse, FetchRoundRecordRequest, FetchRoundRecordResponse, FetchShuffleRecordRequest, FetchShuffleRecordResponse, FetchTableProvideListResponse } from "./provider_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service recorder.RecorderReadService
 */
export declare const RecorderReadService: {
  readonly typeName: "recorder.RecorderReadService",
  readonly methods: {
    /**
     * 讀洗牌紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchShuffleRecord
     */
    readonly fetchShuffleRecord: {
      readonly name: "FetchShuffleRecord",
      readonly I: typeof FetchShuffleRecordRequest,
      readonly O: typeof FetchShuffleRecordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * 讀遊戲局號紀錄
     *
     * @generated from rpc recorder.RecorderReadService.FetchRoundRecord
     */
    readonly fetchRoundRecord: {
      readonly name: "FetchRoundRecord",
      readonly I: typeof FetchRoundRecordRequest,
      readonly O: typeof FetchRoundRecordResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

/**
 * 遊戲供應商需要開放出來的被動接口
 *
 * @generated from service recorder.ProviderService
 */
export declare const ProviderService: {
  readonly typeName: "recorder.ProviderService",
  readonly methods: {
    /**
     * 取得即時遊戲列表
     *
     * @generated from rpc recorder.ProviderService.FetchTableProvideList
     */
    readonly fetchTableProvideList: {
      readonly name: "FetchTableProvideList",
      readonly I: typeof Empty,
      readonly O: typeof FetchTableProvideListResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * 讀即時遊戲桌資訊
     *
     * @generated from rpc recorder.ProviderService.FetchCurrentTable
     */
    readonly fetchCurrentTable: {
      readonly name: "FetchCurrentTable",
      readonly I: typeof FetchCurrentTableRequest,
      readonly O: typeof FetchCurrentTableResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

