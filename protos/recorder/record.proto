syntax = "proto3";
package recorder;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

// 卡牌，代表在此局中使用的各類物品
message Card {

  // 卡牌代碼
  string code = 1;
  // 卡牌ID：牌唯一碼，同ID表示同一張實體牌。不使用此欄位填0。
  string id = 2;

  // 明文
  string plain_text = 4;
  // 簽章
  string signature = 5;
  // 簽章方法
  string sign_method = 6;

  // 順序
  int64 index = 8;
  // 可見
  bool visible = 9;
  // 橫放、直放...
  int32 status = 10;

}

// 卡牌列表
message CardList {

  string card_type = 1;
  // 列表
  repeated Card list = 2;

}

// 動作類型
enum StepActionType {

  // 未指定
  STEP_ACTION_TYPE_UNSPECIFIED = 0;
  // 派發資源
  ADD = 1;
  // 設定指定資源
  SET = 2;
  // 改寫全部資源;
  SETALL = 3;
  // 將資源從場上移除
  REMOVE = 4;
  // 讀取卡牌資料
  READ = 5;
  // 讀卡但不可見
  READ_UNVISIBLE = 6;
  // 移轉資源
  TRANSFER = 7;
  // 卡片正反面
  VISIBLE = 8;
  // 卡牌狀態改變
  STATUS = 9;
  // 此步驟不須修改資源
  NONE = 10;

}

// 執行動作：對某些資源進行增、刪、移轉
message StepAction {

  reserved 2;
  // 行為說明代碼：StepActionCode
  int32 code = 1;
  // 資源擁有座位。
  int32 source_seat = 3;
  // 資源轉移目標座位。
  int32 target_seat = 4;
  // 目標卡牌資源
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 6;
  // 目標分數資源
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 7;
  // 動作類型
  StepActionType type = 8;
  // （可選）附加資料
  google.protobuf.Any data = 9;

}

// 遊戲步驟
message Step {

  reserved 2, 4, 7;
  // 步驟代碼：StepCode
  int32 code = 1;
  // 玩家、執行者：SeatCode
  int32 seat = 3;
  // 時間戳
  google.protobuf.Timestamp timestamp = 5;
  // 執行動作
  repeated StepAction actions = 6;
  // 執行錯誤
  string error = 8;
  // 取消
  bool cancel = 9;
  // 分配毫秒數
  int64 duration = 10;
}

// 座位
message Seat {

  reserved 2 to 5;
  // 座位功能代碼：SeatCode
  int32 code = 1;
  // 各類手牌
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 6;
  // 各類分數
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 8;

}

// 記錄各座位狀態
message Result {

  reserved 2, 4;
  // 判讀類型代碼：ResultRecordTypeCode
  int32 code = 1;
  // 紀錄者座位代碼
  int32 by_seat = 3;
  // 時間戳
  google.protobuf.Timestamp timestamp = 5;
  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 6;

}

// 紀錄
message RoundRecord {

  // 紀錄ID
  bytes id = 1  [(tagger.tags) = "bson:\"_id,omitempty\"" ];
  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 局代碼
  string round_code = 6;
  // 使用牌靴
  string shuffle_code = 7;
  // 使用此洗牌第幾局，從1開始計算
  int64 shuffle_round = 8;

  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 10;
  // 玩家入座
  // key: SeatCode, value: 玩家code。
  map<int32, string> players = 11;
  // 歷程
  repeated Step process = 12;
  // 判讀
  repeated Result results = 13;
  // 取消
  bool cancel = 14;
  // 取消代碼：CancelReasonCode
  string cancel_code = 15;
  // 取消備註
  string cancel_message = 16;

  // 標籤
  map<string, string> tags = 17;

  // 開始時間
  google.protobuf.Timestamp ts_start = 18;
  // 結束時間
  google.protobuf.Timestamp ts_end = 19;

}

message Deck {
  // 卡牌
  CardList cards = 1;
  // 起始位置（削牌後）
  int64 start_index = 2;
  // 切牌位置
  int64 cut_index = 3;
  // 目前位置
  int64 index = 4;
}

// 洗牌紀錄
message ShuffleRecord{

  // 紀錄ID
  bytes id = 1  [(tagger.tags) = "bson:\"_id,omitempty\"" ];
  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 使用洗牌ID
  string shuffle_code = 6;
  // 開始洗牌時間
  google.protobuf.Timestamp ts_start = 7;
  // 結束洗牌時間
  google.protobuf.Timestamp ts_end = 8;
  // cardList
  map<int32, Deck> decks = 11;

}
