syntax = "proto3";
package recorder;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

// 卡牌，代表在此局中使用的各類物品
message Card {

  // 卡牌代碼
  string code = 1 [(tagger.tags) = "bson:\"code\"" ];
  // 卡牌ID：牌唯一碼，同ID表示同一張實體牌。不使用此欄位填0。
  string id = 2 [(tagger.tags) = "bson:\"id\"" ];
  // 驗整
  string secret = 3 [(tagger.tags) = "bson:\"secret\"" ];
  // 順序
  int64 index = 4 [(tagger.tags) = "bson:\"index\"" ];
  // 可見
  bool visible = 5 [(tagger.tags) = "bson:\"visible\"" ];
  // 橫放、直放...
  int32 status = 6 [(tagger.tags) = "bson:\"status\"" ];

}

// 卡牌列表
message CardList {

  // 列表
  repeated Card list = 1 [(tagger.tags) = "bson:\"list\"" ];

}

// 動作類型
enum StepActionType {

  // 未指定
  STEP_ACTION_TYPE_UNSPECIFIED = 0;
  // 派發資源
  ADD = 1;
  // 設定指定資源
  SET = 2;
  // 改寫全部資源;
  SETALL = 3;
  // 將資源從場上移除
  REMOVE = 4;
  // 讀取卡牌資料
  READ = 5;
  // 讀卡但不可見
  READ_UNVISIBLE = 6;
  // 移轉資源
  TRANSFER = 7;
  // 卡片正反面
  VISIBLE = 8;
  // 卡牌狀態改變
  STATUS = 9;
  // 此步驟不須修改資源
  NONE = 10;

}

// 執行動作：對某些資源進行增、刪、移轉
message StepAction {

  reserved 2;
  // 行為說明代碼：StepActionCode
  int32 code = 1 [(tagger.tags) = "bson:\"code\"" ];
  // 資源擁有座位。
  int32 source_seat = 3  [(tagger.tags) = "bson:\"source_seat\"" ];
  // 資源轉移目標座位。
  int32 target_seat = 4  [(tagger.tags) = "bson:\"target_seat\"" ];
  // 目標卡牌資源
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 6  [(tagger.tags) = "bson:\"cards\"" ];
  // 目標分數資源
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 7  [(tagger.tags) = "bson:\"scores\"" ];
  // 動作類型
  StepActionType type = 8  [(tagger.tags) = "bson:\"type\"" ];
  // （可選）附加資料
  google.protobuf.Any data = 9  [(tagger.tags) = "bson:\"data\"" ];

}

// 遊戲步驟
message Step {

  reserved 2, 4, 7;
  // 步驟代碼：StepCode
  int32 code = 1  [(tagger.tags) = "bson:\"code\"" ];
  // 玩家、執行者：SeatCode
  int32 seat = 3  [(tagger.tags) = "bson:\"seat\"" ];
  // 時間戳
  google.protobuf.Timestamp timestamp = 5  [(tagger.tags) = "bson:\"timestamp\"" ];
  // 執行動作
  repeated StepAction actions = 6  [(tagger.tags) = "bson:\"actions\"" ];
  // 執行錯誤
  string error = 8  [(tagger.tags) = "bson:\"error\"" ];
  // 取消
  bool cancel = 9  [(tagger.tags) = "bson:\"cancel\"" ];
  // 分配毫秒數
  int64 duration = 10  [(tagger.tags) = "bson:\"duration\"" ];
}

// 座位
message Seat {

  reserved 2 to 5;
  // 座位功能代碼：SeatCode
  int32 code = 1 [(tagger.tags) = "bson:\"code\"" ];
  // 各類手牌
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 6 [(tagger.tags) = "bson:\"cards\"" ];
  // 各類手牌使用牌類型
  // key: ResourceTypeCode, value: CardTypeCode
  map<int32, int32> card_types = 7 [(tagger.tags) = "bson:\"card_types\"" ];
  // 各類分數
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 8 [(tagger.tags) = "bson:\"scores\"" ];

}

// 記錄各座位狀態
message Result {

  reserved 2, 4;
  // 判讀類型代碼：ResultRecordTypeCode
  int32 code = 1  [(tagger.tags) = "bson:\"code\"" ];
  // 紀錄者座位代碼
  int32 by_seat = 3  [(tagger.tags) = "bson:\"by_seat\"" ];
  // 時間戳
  google.protobuf.Timestamp timestamp = 5  [(tagger.tags) = "bson:\"timestamp\"" ];
  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 6  [(tagger.tags) = "bson:\"seats\"" ];

}

// 紀錄
message RoundRecord {

  // 紀錄ID
  string id = 1  [(tagger.tags) = "bson:\"_id\"" ];
  // 遊戲代碼
  string game_code = 2  [(tagger.tags) = "bson:\"game_code\"" ];
  // 桌代碼
  string table_code = 3  [(tagger.tags) = "bson:\"table_code\"" ];
  // 局代碼
  string round_code = 4  [(tagger.tags) = "bson:\"round_code\"" ];
  // 使用洗牌ID
  string shuffle_code = 5  [(tagger.tags) = "bson:\"shuffle_code\"" ];
  // 使用此洗牌第幾局，從1開始計算
  int64 shuffle_round = 6  [(tagger.tags) = "bson:\"shuffle_round\"" ];
  // 遊戲版本
  string game_version = 7  [(tagger.tags) = "bson:\"game_version\"" ];

  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 8  [(tagger.tags) = "bson:\"seats\"" ];
  // 玩家入座
  // key: SeatCode, value: 玩家code。
  map<int32, string> players = 9  [(tagger.tags) = "bson:\"players\"" ];
  // 歷程
  repeated Step process = 10  [(tagger.tags) = "bson:\"process\"" ];
  // 判讀
  repeated Result results = 11  [(tagger.tags) = "bson:\"results\"" ];
  // 取消
  bool cancel = 12  [(tagger.tags) = "bson:\"cancel\"" ];
  // 取消代碼：CancelReasonCode
  string cancel_code = 13  [(tagger.tags) = "bson:\"cancel_code\"" ];
  // 取消備註
  string cancel_message = 14  [(tagger.tags) = "bson:\"cancel_message\"" ];

  // 標籤
  map<string, string> tags = 15  [(tagger.tags) = "bson:\"tags\"" ];

  // 開始時間
  google.protobuf.Timestamp ts_start = 16  [(tagger.tags) = "bson:\"ts_start\"" ];
  // 結束時間
  google.protobuf.Timestamp ts_end = 17  [(tagger.tags) = "bson:\"ts_end\"" ];
}

// 洗牌紀錄
message ShuffleRecord{
  // 紀錄ID
  string id = 1  [(tagger.tags) = "bson:\"_id\"" ];
  // 遊戲代碼
  string game_code = 2  [(tagger.tags) = "bson:\"game_code\"" ];
  // 桌代碼
  string table_code = 3  [(tagger.tags) = "bson:\"table_code\"" ];
  // 使用洗牌ID
  string shuffle_code = 4  [(tagger.tags) = "bson:\"shuffle_code\"" ];
  // 開始洗牌時間
  google.protobuf.Timestamp ts_start = 5  [(tagger.tags) = "bson:\"ts_start\"" ];
  // 結束洗牌時間
  google.protobuf.Timestamp ts_end = 6  [(tagger.tags) = "bson:\"ts_end\"" ];
  // cardList
  map<int32, CardList> card_list = 7 [(tagger.tags) = "bson:\"card_list\"" ];
}