syntax = "proto3";
package recorder;

import "recorder/record.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message RecordIDResponse {

  // 紀錄ID
  bytes record_id = 1;

}

message RecordShuffleStartedRequest {

  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 洗牌代碼
  string shuffle_code = 6;
  // 時間
  google.protobuf.Timestamp ts_start = 7;

}

message RecordShuffleDoneRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 時間
  google.protobuf.Timestamp ts_done = 5;
  // 使用洗牌代碼
  string shuffle_code = 6;
  // 洗牌類型
  // key: ResourceTypeCode；value: 卡牌陣列
  map<int32, CardList> cards = 7;

}

message RecordRoundStartRequest {

  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 局代碼
  string round_code = 6;
  // 時間
  google.protobuf.Timestamp ts_start = 7;
  // 使用洗牌代碼
  string shuffle_code = 8;
  // 使用此洗牌第幾局，從1開始計算
  int64 shuffle_round = 9;

}

message RecordRoundStepsRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 步驟
  repeated Step steps = 5;

}

message RecordRoundResultsRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 判讀結果
  repeated Result results = 6;
  
}

message RecordRoundCancelRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 時間
  google.protobuf.Timestamp ts_cancel = 5;
  // 取消代碼
  string cancel_code = 6;
  // 取消備註
  string cancel_message = 7;

}

message RecordRoundFinishRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 時間
  google.protobuf.Timestamp ts_finish = 5;

}

service RecorderService {
  
  // 開始更換牌組
  rpc RecordShuffleStarted(RecordShuffleStartedRequest) returns (RecordIDResponse);

  // 更換牌組完畢
  rpc RecordShuffleDone(RecordShuffleDoneRequest) returns (google.protobuf.Empty);

  // 開啟新局
  rpc RecordRoundStart(RecordRoundStartRequest) returns (RecordIDResponse);

  // 記錄步驟
  rpc RecordRoundSteps(RecordRoundStepsRequest) returns (google.protobuf.Empty);

  // 紀錄結果
  rpc RecordRoundResults(RecordRoundResultsRequest) returns (google.protobuf.Empty);

  // 此局作廢
  rpc RecordRoundCancel(RecordRoundCancelRequest) returns (google.protobuf.Empty);

  // 結束此局
  rpc RecordRoundFinish(RecordRoundFinishRequest) returns (google.protobuf.Empty);

}

message RecordQuery {

  // 查詢起時
  google.protobuf.Timestamp ts_from = 1;
  // 查詢終時
  google.protobuf.Timestamp ts_to = 2;

  // 筆數
  int64 limit = 3;
  // 頁面
  int64 page = 4;

}

message FetchShuffleRecordRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 洗牌代碼
  string shuffle_code = 6;

  // 允許的紀錄ID
  repeated bytes record_ids = 9;
  // 允許的遊戲類型
  repeated string game_types = 10;
  // 允許的遊戲子類型
  repeated string game_subtypes = 11;
  // 允許的遊戲版本
  repeated string game_versions = 12;
  // 允許的桌代碼
  repeated string table_codes = 13;
  // 允許的洗牌代碼
  repeated string shuffle_codes = 14;

  // 查詢限制
  RecordQuery query = 16;

}

message FetchShuffleRecordResponse {
  repeated ShuffleRecord shuffle_record = 1;
}

message FetchRoundRecordRequest {

  // 紀錄ID
  bytes record_id = 1;
  // 遊戲類型
  string game_type = 2;
  // 遊戲子類型
  string game_subtype = 3;
  // 遊戲版本
  string game_version = 4;
  // 桌代碼
  string table_code = 5;
  // 局代碼
  string round_code = 6;

  // 允許的紀錄ID
  repeated bytes record_ids = 9;
  // 允許的遊戲類型
  repeated string game_types = 10;
  // 允許的遊戲子類型
  repeated string game_subtypes = 11;
  // 允許的遊戲版本
  repeated string game_versions = 12;
  // 允許的桌代碼
  repeated string table_codes = 13;
  // 允許的局代碼
  repeated string round_codes = 14;

  // 查詢限制
  RecordQuery query = 16;

}

message FetchRoundRecordResponse {
  repeated RoundRecord round_record = 1;
}

service RecorderReadService {
  
  // 讀洗牌紀錄
  rpc FetchShuffleRecord(FetchShuffleRecordRequest) returns (FetchShuffleRecordResponse);

  // 讀遊戲局號紀錄
  rpc FetchRoundRecord(FetchRoundRecordRequest) returns (FetchRoundRecordResponse);

}