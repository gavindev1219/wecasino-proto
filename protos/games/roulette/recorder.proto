syntax = "proto3";
package games.roulette;

enum ResourceType {

  // 未指定
  RESOURCE_TYPE_UNSPECIFIED = 0;
  // 牌靴
  SHOE = 1;
  // 輪盤
  ROULETTE = 2;

}

// 步驟，依據遊戲供應商邏輯，不是每個步驟都會走到
enum Step {

  // 未指定
  STEP_UNSPECIFIED = 0;
  // 本局開始
  ROUND_START = 1;
  // 本局完成
  ROUND_FINISHED = 2;
  // 本局取消
  ROUND_CANCELED = 3;

  // 開放下注
  OPEN_FOR_BETTING = 4;
  // 停止下注
  CLOSE_THE_BETTING = 5;

  // 轉盤
  SPIN_WHEEL = 8;

  // PITBOSS 修改骰點
  PITBOSS_MODIFY_BOWL = 16;
  
}

// 座位功能代碼
enum Seat {

  // 未指定
  SEAT_UNSPECIFIED = 0;
  // Dealer
  DEALER = 1;
  // Pitboss
  PITBOSS = 9;

}

// 結果紀錄類型代碼
enum ResultRecordType {

  // 未指定
  RESULT_RECORD_TYPE_UNSPECIFIED = 0;
  // 遊戲局結束
  ROUND_FINISH = 1;
  // Pitboss 修正
  PITBOSS_MODIFY_RESULT = 2;

}

/**
 * The state of the game flow
 */
enum GameState {
  STATE_IDLE = 0;             // Idle
  STATE_START = 1;            // Game Starting
  STATE_COUNTER_START = 2;    // Counuter Started
  STATE_INPUT = 3;            // Wait for input
  STATE_END = 7;              // Game Ended
  STATE_CONFIRM = 8;          // Game Ended
}

/**
 * The status fo the current game.
 */
message GameStatus {
  string sessionID = 1;     // Unique tableid
  string gameRoundID = 2;   	// Unique session for the game
  string tableID = 3;     	// Unique tableid
  GameState state = 4;    	// State of the game
  int64 startTime = 5;    	// Time when game start
  string shoeID = 6;     	// Shoe ID
  int32 ball1 = 10;     	// Value of the ball 1
  int32 ball2 = 11;     	// Value of the ball 2
  int32 ball3 = 12;     	// Value of the ball 3
  int32 ball4 = 13;     	// Value of the ball 4
  int32 ball5 = 14;     	// Value of the ball 5
  string a1 = 15;                 // Card slot Banker 1
  string a2 = 16;                 // Card slot Banker 2
  string b1 = 17;                 // Card slot Player 1
  string b2 = 18;                 // Card slot Player 2
  bool wina = 19;                 // Result of banker
  bool winb = 20;                 // Result of player
  int32 countdown = 21;       // Coundown value
  int32 playerPoint = 22;         // Player Point
  int32 bankerPoint = 23;         // Banker Point
  int32 isBankerPair = 41;        // Banker Pair -1=unknown 0=false 1=true
  int32 isPlayerPair = 42;        // Player Pair-1=unknown 0=false 1=true
  map<string, int32> lucky = 150;     // Lucky Number and payout ratio
}